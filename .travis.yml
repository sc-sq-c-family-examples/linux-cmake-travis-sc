language: cpp
dist: bionic
os: linux

sudo: false

compiler: gcc

addons:
  sonarcloud:
    organization: "sc-sq-c-family-examples"
    # SONAR_TOKEN is configured as enviroment variable in Repository Settings
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-9

env:
  - CXX=g++-9 BUILD_WRAPPER_OUT_DIR=build_wrapper_output_folder

before_install:
  - wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-x86_64.sh
  - sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
  - export PATH=/usr/local/bin:$PATH
  - cmake --version

script:
  # Prepare the build system
  - NUMBER_OF_PROCESSORS=$(nproc --all)
  - mkdir build
  - cmake -S . -B build
  # Wraps the compilation with the Build Wrapper to generate configuration (used
  # later by the SonarQube Scanner) into the "build_wrapper_output_folder" folder
  - build-wrapper-linux-x86-64 --out-dir "$BUILD_WRAPPER_OUT_DIR" cmake --build build/ --config Release
  # And finally run the SonarQube analysis - read the "sonar-project.properties"
  # file to see the specific configuration
  - sonar-scanner --define sonar.cfamily.cache.enabled=true --define sonar.cfamily.cache.path=${TRAVIS_HOME}/.cfamily --define sonar.cfamily.threads=${NUMBER_OF_PROCESSORS} --define sonar.cfamily.build-wrapper-output="$BUILD_WRAPPER_OUT_DIR"

cache:
  directories:
    - $HOME/.sonar/cache
    # This contains the CFamily cache. According to https://docs.travis-ci.com/user/caching/#pull-request-builds-and-caches,
    # for a PR, it will use the cache of the target branch if the branch of the PR does not already have its cache.
    - $HOME/.cfamily
